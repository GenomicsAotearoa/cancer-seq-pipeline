// Trial pipeline
// Needs cutdapt, samtools, bwa, picard, java, varscan2, fastqc, bedtools. 
// Annovar script table_annovar.pl is a customised version of that provided with annovar, needs to replace the default version.
//      i.e. you need to install annovar and then replace table_annovar.pl with the copy found with this pipeline
// Report generation function to be added (soon)

// input is 4 *.fastq.gz files. 2 sets of paired end files, one for tumour, one for normal.

bwaIndex="/nesi/project/uoa00571/hg19/ucsc.hg19.fasta"
threads="8"

qc = {
    output.dir="fastqc"
    //exec "module load FastQC"
    multi "fastqc -t 1 $input1 -o fastqc/",
        "fastqc -t 1 $input2 -o fastqc/",
        "fastqc -t 1 $input3 -o fastqc/",
        "fastqc -t 1 $input4 -o fastqc/"
}


trim = {
    output.dir="intermediateFiles"
    // this assumes that the input is illumina, as we're not autodetecting across a variety of possible adapters,
    // which would be possible with trim_glaore, but that requires changes to trim_galores output methods. 
    multi "cutadapt -a AGATCGGAAGAGC -q 30 --minimum-length=50 -o $output1 -p $output2 $input1 $input2",
        "cutadapt -a AGATCGGAAGAGC -q 30 --minimum-length=50 -o $output3 -p $output4 $input3 $input4"
}



align = { 
    output.dir="intermediateFiles"
    // align the tumour sample and the 
    //exec "module load SAMtools"
    multi "bwa mem -R '@RG\\tID:${SAMPLE}_02\\tSM:$SAMPLE\\tLB:${SAMPLE}_02\\tPL:ILLUMINA' -t 8 $bwaIndex $input1 $input2 > $output1",
        "bwa mem -t 8 -R '@RG\\tID:${SAMPLE}_02\\tSM:$SAMPLE\\tLB:${SAMPLE}_02\\tPL:ILLUMINA' $bwaIndex $input3 $input4 > $output2"
        
    multi "samtools sort -@8 -O BAM -o $output1.bam $output1",
        "samtools sort -@8 -O BAM -o $output2.bam $output2"


}

removeDuplicates = {
    output.dir="intermediateFiles"
    multi "java -jar /opt/nesi/mahuika/picard/2.1.0/picard.jar MarkDuplicates I=$input1.bam O=$output1.bam M=$output._dup_metrics.txt REMOVE_DUPLICATES=TRUE CREATE_INDEX=TRUE",
        "java -jar /opt/nesi/mahuika/picard/2.1.0/picard.jar MarkDuplicates I=$input2.bam O=$output2.bam M=$output._dup_metrics.txt REMOVE_DUPLICATES=TRUE CREATE_INDEX=TRUE"

}



removeSuppplementary = {
    output.dir="intermediateFiles"
    multi "samtools view -@ 4 -b -F 2048 $input1.bam > $output1.bam",
        "samtools view -@ 4 -b -F 2048 $input2.bam > $output2.bam"
    multi "samtools index $output1.bam",
        "samtools index $output2.bam"

    
}

pileUp = {
    output.dir="intermediateFiles"
    exec "samtools mpileup -B -d 9000 -q 1 -f $bwaIndex -o $output $input1.bam $input2.bam"
}

variantCalling = {
   output.dir="intermediateFiles"

    // it should be noted that output1 is snps, output2 is indels
    VARSCAN="/nesi/project/uoa00571/software/VarScan.v2.4.3.jar"
    exec "java -Xmx8g -jar /nesi/project/uoa00571/software/VarScan.v2.4.3.jar somatic $input --mpileup 1 --min-var-freq 0.1 --p-value 1.00 --somatic-p-value 1.00 --strand-filter 0 --tumor-purity 0.5 --output-vcf 1 --min-coverage-normal 10 --min-coverage-tumor 10 --output-snp $output1.vcf  --output-indel $output2.vcf"
}

annotation = {
    output.dir="intermediateFiles"

    // load mahuika modules - the bpipe config method of doing this doesn't appear to be working. Or I'm doing it wrong (more likely)
    //exec "module load VCFtools"
    //exec "module load SAMtools"
    //exec "module load BEDTools/2.26.0-gimkl-2017a"
    //exec "module load Perl"


    // Version 2 of our annotation
    multi "perl table_annovar.pl $input ../data/annovar/db/  -buildver hg19 -outfile $output.vcf -remove -protocol refGene,popfreq_max_20150413,dbnsfp30a,tfbsConsSites,targetScanS,genomicSuperDups,clinvar_20170130,cosmic82,avsnp147,rmsk,wgEncodeDacMapabilityConsensusExcludable,wgEncodeDukeMapabilityRegionsExcludable,gnomad_genome,gnomad_exome,exac03,intervar_20170202,revel,dgvMerged  -operation g,f,f,r,r,r,f,f,f,r,r,r,f,f,f,f,f,r  -nastring . -vcfinput",
    "perl table_annovar.pl $input2 ../data/annovar/db/  -buildver hg19 -outfile $output2.vcf -remove -protocol refGene,popfreq_max_20150413,dbnsfp30a,tfbsConsSites,targetScanS,genomicSuperDups,clinvar_20170130,cosmic82,avsnp147,rmsk,wgEncodeDacMapabilityConsensusExcludable,wgEncodeDukeMapabilityRegionsExcludable,gnomad_genome,gnomad_exome,exac03,intervar_20170202,revel,dgvMerged  -operation g,f,f,r,r,r,f,f,f,r,r,r,f,f,f,f,f,r  -nastring . -vcfinput"

   // remove the intermediate files to save space
   // cleanup "*.pileUp"
   // cleanup "*.bam"

}

count = {
  output.dir="intermediateFiles"

  exec "module load R"
  exec "echo $input"
  exec "Rscript filePairs.R $input snp $output $output2"
  // then the germline one exec
}




// currently runs qc, doesn't wait for confirmation on whether to continue the run, 
// trims, and does a 2nd lot of qc to the trimmed reads. 
// Once this is parrallelized, should be able to insert multiqc steps. 

// run with qc
run { [qc + trim] +  [qc + align] + removeDuplicates + removeSuppplementary + pileUp + variantCalling + annotation}

// run without qc
// run { trim +  align + removeDuplicates + removeSuppplementary + pileUp + variantCalling + annotation }

